name: Build, Test & Deploy OpenDoorPH Website
on:
  push:
    branches: [main, feature/library-updates]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./OpenDoorWebsiteApp
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './OpenDoorWebsiteApp/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test -- --coverage --ci --watchAll=false
      - name: Build application
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: ./OpenDoorWebsiteApp
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './OpenDoorWebsiteApp/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: OpenDoorPH-Deploy-${{ github.run_id }}
          aws-region: us-east-2
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://opendoorsitebucket --delete --cache-control "public, max-age=31536000, immutable" --exclude "*.html" --exclude "service-worker.js" --exclude "manifest.json"
          aws s3 sync build/ s3://opendoorsitebucket --delete --cache-control "public, max-age=0, must-revalidate" --include "*.html" --include "service-worker.js" --include "manifest.json"
      - name: Get CloudFront Distribution ID
        id: cloudfront
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Comment=='cloud front for opendoor.'].Id" --output text)
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.cloudfront.outputs.DISTRIBUTION_ID }} \
            --paths "/*"
      - name: Deployment summary
        run: |
          echo "🚀 OpenDoorPH website deployed successfully!"
          echo "📊 S3 Bucket: opendoorsitebucket"
          echo "🌐 CloudFront Distribution: ${{ steps.cloudfront.outputs.DISTRIBUTION_ID }}"
          echo "🔗 Website URLs:"
          echo "  - https://opendoorph.info"
          echo "  - https://opendoorph.net"
          echo "  - https://opendoorph.org"
          echo "  - https://opendoorph.com"
